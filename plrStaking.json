[
  {
    "inputs": [
      { "internalType": "address", "name": "_stakingToken", "type": "address" },
      { "internalType": "address", "name": "_rewardToken", "type": "address" },
      { "internalType": "uint256", "name": "_maxTotalStake", "type": "uint256" }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  { "inputs": [], "name": "InsufficientBalance", "type": "error" },
  {
    "inputs": [{ "internalType": "uint256", "name": "maximumStakeAmount", "type": "uint256" }],
    "name": "InvalidMaximumStake",
    "type": "error"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "minimumStakeAmount", "type": "uint256" }],
    "name": "InvalidMinimumStake",
    "type": "error"
  },
  { "inputs": [], "name": "InvalidRewardToken", "type": "error" },
  { "inputs": [], "name": "InvalidStakingToken", "type": "error" },
  {
    "inputs": [
      { "internalType": "uint256", "name": "totalMaxStake", "type": "uint256" },
      { "internalType": "uint256", "name": "currentStakedAmount", "type": "uint256" },
      { "internalType": "uint256", "name": "remainingStakeableAmount", "type": "uint256" },
      { "internalType": "uint256", "name": "stakerAmount", "type": "uint256" }
    ],
    "name": "MaximumTotalStakeReached",
    "type": "error"
  },
  { "inputs": [], "name": "OnlyWhenInitialized", "type": "error" },
  { "inputs": [], "name": "OnlyWhenReadyForUnstake", "type": "error" },
  { "inputs": [], "name": "OnlyWhenStakeable", "type": "error" },
  { "inputs": [], "name": "OnlyWhenStaked", "type": "error" },
  {
    "inputs": [
      { "internalType": "uint256", "name": "currentMin", "type": "uint256" },
      { "internalType": "uint256", "name": "proposedMax", "type": "uint256" }
    ],
    "name": "ProposedMaxStakeTooLow",
    "type": "error"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "currentMax", "type": "uint256" },
      { "internalType": "uint256", "name": "proposedMin", "type": "uint256" }
    ],
    "name": "ProposedMinStakeTooHigh",
    "type": "error"
  },
  { "inputs": [], "name": "RewardsAlreadyCalculated", "type": "error" },
  { "inputs": [], "name": "RewardsCannotBeZero", "type": "error" },
  { "inputs": [], "name": "RewardsNotTransferred", "type": "error" },
  { "inputs": [], "name": "StakeWouldBeGreaterThanMax", "type": "error" },
  { "inputs": [], "name": "StakedDurationTooShort", "type": "error" },
  { "inputs": [], "name": "StakingDurationTooShort", "type": "error" },
  { "inputs": [], "name": "StakingPeriodPassed", "type": "error" },
  {
    "inputs": [{ "internalType": "address", "name": "_address", "type": "address" }],
    "name": "UserAlreadyClaimedRewards",
    "type": "error"
  },
  { "inputs": [], "name": "ZeroAddress", "type": "error" },
  {
    "anonymous": false,
    "inputs": [{ "indexed": false, "internalType": "enum PStaking.StakingState", "name": "newState", "type": "uint8" }],
    "name": "ContractStateUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": false, "internalType": "uint256", "name": "newMaxStake", "type": "uint256" }],
    "name": "MaxStakeAmountUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": false, "internalType": "uint256", "name": "newMinStake", "type": "uint256" }],
    "name": "MinStakeAmountUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" },
      { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": false, "internalType": "address", "name": "user", "type": "address" },
      { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "RewardAllocated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": true, "internalType": "address", "name": "user", "type": "address" },
      { "indexed": false, "internalType": "uint256", "name": "reward", "type": "uint256" }
    ],
    "name": "RewardPaid",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [{ "indexed": false, "internalType": "uint256", "name": "rewards", "type": "uint256" }],
    "name": "RewardsDeposited",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": true, "internalType": "address", "name": "user", "type": "address" },
      { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "Staked",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      { "indexed": true, "internalType": "address", "name": "user", "type": "address" },
      { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }
    ],
    "name": "Unstaked",
    "type": "event"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "_amount", "type": "uint256" }],
    "name": "depositRewards",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "_staker", "type": "address" }],
    "name": "eligibleRewardAmount",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getContractState",
    "outputs": [{ "internalType": "enum PStaking.StakingState", "name": "", "type": "uint8" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
    "name": "getRewardAmountForAccount",
    "outputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getStakedAccounts",
    "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
    "name": "getStakedAmountForAccount",
    "outputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "maxStake",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "maxTotalStake",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "minStake",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  { "inputs": [], "name": "overrideStakeLockup", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  { "inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
  {
    "inputs": [],
    "name": "rewardToken",
    "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  { "inputs": [], "name": "setStateInitialized", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
  {
    "inputs": [],
    "name": "setStateReadyForUnstake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  { "inputs": [], "name": "setStateStakeable", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
  { "inputs": [], "name": "setStateStaked", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
  {
    "inputs": [{ "internalType": "uint256", "name": "_amount", "type": "uint256" }],
    "name": "stake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "stakedToken",
    "outputs": [{ "internalType": "contract PillarStakedToken", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "name": "stakeholderData",
    "outputs": [
      { "internalType": "bool", "name": "staked", "type": "bool" },
      { "internalType": "uint256", "name": "stakedAmount", "type": "uint256" },
      { "internalType": "uint256", "name": "rewardAmount", "type": "uint256" },
      { "internalType": "bool", "name": "claimed", "type": "bool" }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "name": "stakeholderList",
    "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "stakingToken",
    "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalStaked",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  { "inputs": [], "name": "unstake", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
  {
    "inputs": [{ "internalType": "uint256", "name": "_amount", "type": "uint256" }],
    "name": "updateMaxStakeLimit",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [{ "internalType": "uint256", "name": "_amount", "type": "uint256" }],
    "name": "updateMinStakeLimit",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  { "stateMutability": "payable", "type": "receive" }
]
